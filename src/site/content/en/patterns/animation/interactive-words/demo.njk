---
patternId: gui-challenges/animation/interactive-words
---

<!DOCTYPE html>
<html>
  <head>
    <meta name="color-scheme" content="dark light">
    <link rel="icon" href="https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/PGTSinGx9liHBuzggHNC.svg" type="image/svg+xml">
    <style>
      *{box-sizing:border-box;margin:0}html{height:100%;width:100%;overflow-x:hidden;overflow-y:auto;overflow:hidden auto;-ms-scroll-snap-type:y;scroll-snap-type:y}html>body>section{scroll-snap-align:center}body{min-height:100%;min-width:100%;font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif;display:flex;flex-direction:column;align-items:center;justify-content:center;padding:15vh 2vh}section{height:70vh;display:inline-flex;align-items:center;justify-content:center}h1{font-weight:100;letter-spacing:.25em;text-transform:uppercase;--scalar:2vw;font-size:clamp(1.5rem,calc(1rem + var(--scalar)),8rem)}@media (min-width:481px){h1{--scalar:4vw}}p{font-weight:lighter;line-height:1.25;max-width:20ch;font-size:clamp(1.25rem,calc(1rem + 3vw),3rem)}@media (prefers-reduced-motion:no-preference){[letter-animation]>span{display:inline-block;white-space:break-spaces}[letter-animation=breath]{--glow-color:white}[letter-animation=breath]>span{-webkit-animation:breath 1.2s ease calc(var(--index) * 100 * 1ms) infinite alternate;animation:breath 1.2s ease calc(var(--index) * 100 * 1ms) infinite alternate}}@media (prefers-reduced-motion:no-preference) and (prefers-color-scheme:light){[letter-animation=breath]{--glow-color:black}}@media (prefers-reduced-motion:no-preference){[letter-animation=hover]:hover>span{transform:scale(.75) perspective(1px)}[letter-animation=hover]>span{transition:transform .3s ease;cursor:pointer;will-change:transform}[letter-animation=hover]>span:hover{transform:scale(1.25) perspective(1px)}}@media (prefers-reduced-motion:no-preference){[word-animation]{display:inline-flex;flex-wrap:wrap;gap:1ch}[word-animation=trampoline]>span{display:inline-block;transform:translateY(100%);-webkit-animation:trampoline 3s ease calc(var(--index) * 150 * 1ms) infinite alternate;animation:trampoline 3s ease calc(var(--index) * 150 * 1ms) infinite alternate}}@media (prefers-reduced-motion:no-preference) and (hover){[word-animation=hover]{overflow:hidden;overflow:clip}[word-animation=hover]>span{transition:transform .3s ease;cursor:pointer}[word-animation=hover]>span:not(:hover){transform:translateY(50%)}}.github-corner{fill:CanvasText;color:Canvas}.github-corner:hover .octo-arm{-webkit-animation:octocat-wave 560ms ease-in-out;animation:octocat-wave 560ms ease-in-out}@-webkit-keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@-webkit-keyframes breath{from{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}to{transform:scale(1.25) translateY(-5px) perspective(1px);text-shadow:0 0 40px var(--glow-color);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}}@keyframes breath{from{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}to{transform:scale(1.25) translateY(-5px) perspective(1px);text-shadow:0 0 40px var(--glow-color);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}}@-webkit-keyframes trampoline{0%{transform:translateY(100%);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{transform:translateY(0);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes trampoline{0%{transform:translateY(100%);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{transform:translateY(0);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}
    </style>
  </head>
  <body>
    <h1 split-by="word" word-animation="hover">hover the words</h1>

    <script>
      !function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(r){const o=new URL(e,location),n=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((r,c)=>{const l=new URL(e,o);if(self[t].moduleMap[l])return r(self[t].moduleMap[l]);const s=new Blob([`import * as m from '${l}';`,`${t}.moduleMap['${l}']=m;`],{type:"text/javascript"}),a=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(s),onerror(){c(new Error(`Failed to import: ${e}`)),n(a)},onload(){r(self[t].moduleMap[l]),n(a)}});document.head.appendChild(a)})),self[t].moduleMap={}}}("assets/");const e=(e,t)=>{const r=document.createElement("span");return r.textContent=e,r.style.setProperty("--index",t),r},{matches:t}=window.matchMedia("(prefers-reduced-motion: no-preference)");if(t){document.querySelectorAll("[split-by]").forEach((t=>{const r=t.getAttribute("split-by");let o=null;var n;"letter"===r?(n=t.innerText,o=[...n].map(e)):"word"===r&&(o=(t=>t.split(" ").map(e))(t.innerText)),o&&t.firstChild.replaceWith(...o)}))}
    </script>
  </body>
</html>
