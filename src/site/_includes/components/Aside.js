/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const {i18n, getLocaleFromPath} = require('../../_filters/i18n');

/**
 * @this {EleventyPage}
 */
function Aside(content, type = 'note') {
  const locale = getLocaleFromPath(this.page && this.page.filePathStem);

  let prefix;
  switch (type) {
    case 'note':
      prefix = '';
      break;

    case 'caution':
    case 'warning':
    case 'success':
    case 'objective':
      prefix = `**${i18n(`i18n.common.${type}`, locale)}**:`;
      break;

    case 'codelab':
      prefix = `**${i18n(`i18n.common.try_it`, locale)}**!`;
      break;

    case 'key-term':
      prefix = `**${i18n(`i18n.common.key_term`, locale)}**:`;
      break;

    case 'gotchas':
      prefix = i18n(`i18n.common.gotchas`, locale);
      // The <strong> tag should appear outside of the <p> tag
      // generated by markdown. This forces an intentional line break.
      return `
        <div class="w-aside w-aside--${type}"><strong>${prefix}!</strong>
          ${content}</div>
      `;
  }

  return `
<div class="w-aside w-aside--${type}">

${prefix} ${content}
</div>
  `;
}

module.exports = Aside;
