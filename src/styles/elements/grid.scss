@import '../settings/breakpoints';
@import '../settings/mixins';

// =============================================================================
// GRID OVERVIEW
//
// The grid consists of two elements: container and row.
//
// Container defines the max width of the grid area and provides margining on
// the sides.
//
// Row defines the actual grid columns and their dimensions.
//
// 599px to minimum size
// 1-column FLUID block

// 1023px - 600px
// 12-column FLUID grid

// 1440px - 1024px
// 12-column FIXED grid

// 1441px+
// 12-column FIXED grid
//
// =============================================================================

// TODO (robdodson): I'd like to redo this so the gutters are fluid.

// 4-column grid, 599px to minimum size
$GRID_COLUMN_SMALL: 59.904px;       // calc(288px * .208);
$GRID_GAP_SMALL: 16.128px;          // calc(288px * .056);

// 12-column grid, 1023px - 600px
$GRID_COLUMN_MEDIUM: 44.9856px;     // calc(704px * .0639);
$GRID_GAP_MEDIUM: 14.9248px;        // calc(704px * .0212);

// 12-column grid, 1440px - 1024px
$GRID_COLUMN_LARGE: 61.344px;       // calc(960px * .0639);
$GRID_GAP_LARGE: 20.352px;          // calc(960px * .0212);

// 12-column grid, 1441px+
$GRID_COLUMN_EXTRA_LARGE: 81.792px; // calc(1280px * .0639);
$GRID_GAP_EXTRA_LARGE: 27.136px;    // calc(1280px * .0212);

// Container paddings. Used to create consistent top/bottom margin across pages.
$CONTAINER_PADDING_LARGE: 140px;
$CONTAINER_PADDING_SMALL: 80px;

.container {
  margin: 0 auto;
  padding-left: 16px;
  padding-right: 16px;
  position: relative;

  @include bp(sm) {
    max-width: 768px;
    padding-left: 32px;
    padding-right: 32px;
  }

  @include bp(lg) {
    max-width: 1024px;
  }

  @include bp(xl) {
    max-width: 1440px;
    padding-left: $CONTAINER_PADDING_SMALL;
    padding-right: $CONTAINER_PADDING_SMALL;
  }
}

.row {
  display: block;

  @include bp(sm) {
    display: grid;
    grid-template-columns: repeat(12, 6.39%);
    grid-gap: 2.12%;
  }

  @include bp(lg) {
    grid-template-columns: repeat(12, $GRID_COLUMN_LARGE);
    grid-gap: $GRID_GAP_LARGE;
  }

  @include bp(xl) {
    grid-template-columns: repeat(12, $GRID_COLUMN_EXTRA_LARGE);
    grid-gap: $GRID_GAP_EXTRA_LARGE;
  }
}

// Column helpers
// Span 12 columns on mobile
// .col-xs-12 {
//   grid-column: 1 / span 12;
// }

// @media screen and (min-width: $BREAKPOINT_VALUE_MOBILE) {
//   .col-sm-10 {
//     grid-column: 2 / span 10;
//   }

//   .col-sm-12 {
//     grid-column: 1 / span 12;
//   }
// }

// @media screen and (min-width: $BREAKPOINT_VALUE_TABLET) {
//   .col-md-8 {
//     grid-column: 3 / span 8;
//   }

//   .col-md-10 {
//     grid-column: 2 / span 10;
//   }

//   .col-md-12 {
//     grid-column: 1 / span 12;
//   }
// }

// @media screen and (min-width: $BREAKPOINT_VALUE_TABLET_LANDSCAPE) {
//   .col-lg-6 {
//     grid-column: 4 / span 6;
//   }

//   .col-lg-8 {
//     grid-column: 3 / span 8;
//   }

//   .col-lg-10 {
//     grid-column: 2 / span 10;
//   }

//   .col-lg-12 {
//     grid-column: 1 / span 12;
//   }
// }

// @media screen and (min-width: $BREAKPOINT_VALUE_DESKTOP) {
//   .col-xl-6 {
//     grid-column: 4 / span 6;
//   }

//   .col-xl-8 {
//     grid-column: 3 / span 8;
//   }

//   .col-xl-10 {
//     grid-column: 2 / span 10;
//   }

//   .col-xl-12 {
//     grid-column: 1 / span 12;
//   }
// }